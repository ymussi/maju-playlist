name: Build Docker MGC

on:
  push:
    branches:
      - master # Este workflow será disparado automaticamente a cada 'git push' na branch 'main'

env:
  REGISTRY_URL: container-registry.br-se1.magalu.cloud         # <--- AJUSTE: URL do seu Container Registry Magalu Cloud
  IMAGE_NAME: maju-playlist                # <--- AJUSTE: Nome que você quer dar à sua imagem (ex: 'nome-do-seu-servico')

jobs:
  build-and-push:
    runs-on: ubuntu-latest # O ambiente onde a ação vai rodar (uma máquina virtual Ubuntu no GitHub)

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # Clona o código do seu repositório para o ambiente de build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3 # Configura o Docker Buildx para builds eficientes

    - name: Log in to Magalu Cloud Container Registry
      uses: docker/login-action@v3 # Ação predefinida para fazer login em registries Docker
      with:
        registry: ${{ env.REGISTRY_URL }}
        username: ${{ secrets.MGC_REGISTRY_USERNAME }} # Usa o secret configurado no GitHub
        password: ${{ secrets.MGC_REGISTRY_TOKEN }}    # Usa o secret configurado no GitHub

    - name: Build Docker Image
      run: |
        # Define a tag da imagem usando o SHA do commit (para uma tag única e rastreável)
        # e também uma tag 'latest' para o deploy mais recente.
        IMAGE_TAG=${{ github.sha }} 
        LATEST_TAG=latest

        # Constrói a imagem Docker. O '.' indica que o Dockerfile está na raiz do contexto.
        docker build -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} \
                     -t ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${LATEST_TAG} \
                     .

    - name: Push Docker Image
      run: |
        # Publica (push) as imagens para o Container Registry da Magalu Cloud
        IMAGE_TAG=${{ github.sha }} # Redefine a tag para garantir
        LATEST_TAG=latest

        docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
        docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${LATEST_TAG}

    - name: Verify Pushed Image (Opcional, para debug)
      run: |
        echo "Imagem construída e publicada com a tag: ${{ github.sha }}"
        echo "Imagem também publicada com a tag: latest"
        echo "URL da imagem no registry: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"